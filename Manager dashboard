import customtkinter as ctk
from PIL import Image

class ManagerDashboard(ctk.CTkFrame):
    def __init__(self, parent, controller):
        super().__init__(parent)
        self.controller = controller

        self.screen_width = 1920
        self.screen_height = 974
        self.configure(fg_color="#FFFFFF", width=self.screen_width, height=self.screen_height)

        # Create picture frame (background image holder)
        picture_frame = ctk.CTkFrame(self, width=1547, height=800)
        picture_frame.place(x=0, y=0)

        try:
            background_dashboard = Image.open(r"C:\Users\User\Documents\Ruxin file\ALL 2\manager_dash.png").resize((1547, 800))
            ctk_background_dashboard = ctk.CTkImage(light_image=background_dashboard, size=(1547, 800))
            background_dashboard_label = ctk.CTkLabel(picture_frame, image=ctk_background_dashboard, text="")
            background_dashboard_label.place(x=0, y=0)
            background_dashboard_label.image = ctk_background_dashboard
        except Exception as e:
            print(f"Error loading background image: {e}")

        ctk.CTkLabel(self, text="Manager Dashboard", font=("Arial", 50), text_color="#000000",fg_color="transparent").place(x=550, y=100)
        ctk.CTkButton(self, text="View Reports", font=("Arial", 30), fg_color="#2A50CB", hover_color="#1a39a3", width=600, height=80, command=self.view_sales_history).place(x=480, y=200)
        ctk.CTkButton(self, text="Manage Inventory", font=("Arial", 30), fg_color="#2A50CB", hover_color="#1a39a3", width=600, height=80, command=self.manage_inventory).place(x=480, y=350)
        ctk.CTkButton(self, text="Registration", font=("Arial", 30), fg_color="#2A50CB", hover_color="#1a39a3", width=600, height=80, command=self.registration).place(x=480, y=500)
        ctk.CTkButton(self, text="Logout", font=("Arial", 30), fg_color="#2A50CB", hover_color="#1a39a3", width=600, height=80, command=self.logout).place(x=480, y=650)
    # Instead of subprocess, just call controller to switch frame
    def registration(self):
        self.controller.show_frame("Register")

    def logout(self):
        self.controller.show_frame("ManagerLoginPage")

    def manage_inventory(self):
        self.controller.show_frame("InventoryReport")

    def view_sales_history(self):
        self.controller.show_frame("SalesHistoryPage")
